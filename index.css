.serialized {
  float: left;
  width: 50%;
}

.serialized textarea {
  width: 93%;
  height: 200px;
}

a {
  width: 18px;
  height: 18px;
  text-decoration: none;
}
a:hover {
  width: 18px;
  height: 18px;
  text-decoration: underline;
}
.btn {
  padding: 5px 2px;
  margin-right: 6px;
  border: 2px solid black;
  border-radius: 10px;
  background-color: #ffffff;
  color: #000000;
}

input[type=text],
input[type=number] {
  height: 24px;
}

div.imageRegions, .preferences {
  float: left;
  width: 50%;
}

.imageRegions > h2, h2.preferences {
  font-size: 20px;
}

textarea.textToCopy {
  float: left;
  width: 20%;
}
div.shapeControls {
  float: left;
  width: 35%;
}
fieldset.shapeControls {
  width: 25%;
}
fieldset.shapeControls, fieldset.zoom {
  float: left;
  margin-top: -10px;
  margin-bottom: 10px;
  text-align: center;
}
fieldset.zoom {
  width: 15%;
}

input.zoom {
  width: 110px;
}

h1#imageAreas {
  font-size: 20px;
}

/* Todo: Move to scoping under findBar */

find-bar {
  position: fixed;
  bottom: 0px;
  left: 0px;
  z-index: 1000;
  background-color: white;
  border: 2px outset black;
  padding: 5px;
  display: none;
}

.findBar {
  font-size: x-large;
  min-width: 200px;
}
button.cancel {
  color: white;
  background-color: red;
  min-height: 20px;
  margin-bottom: 5px;
  vertical-align: middle;
}

/* Todo: Make this Image map content scoped instead */
img {
  width: 100%;
  height: 100%;
}
svg.selector {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
}
rect.selector {
  fill: transparent;
  stroke: blue;
  stroke-width: 2px;
}
rect:not(.selector), circle, polygon {
  stroke-width: 2px;
  stroke: transparent;
}
rect.borderBlink, circle.borderBlink, polygon.borderBlink {
  display: block !important;
  animation: borderBlink 1s step-end infinite !important;
}
@keyframes borderBlink {
  from, to {
    stroke: transparent;
  }
  50% {
    stroke: red;
  }
}
